/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    macros {
        new_macro: new_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none>;
            label = "NEW_MACRO";
        };
    };

    behaviors {
        hrm: hrm {
            compatible = "zmk,behavior-hold-tap";
            label = "HRM";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <1000>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <200>;
            flavor = "balanced";
        };

        shift_tab_morph: shift_tab_morph {
            compatible = "zmk,behavior-mod-morph";
            label = "SHIFT_TAB_MORPH";
            bindings = <&kp LEFT_SHIFT>, <&kp TAB>;

            #binding-cells = <0>;
            mods = <(MOD_LGUI|MOD_RGUI)>;
            keep-mods = <(MOD_LGUI|MOD_RGUI)>;
        };

        backspace_shift_tab_morph: backspace_shift_tab_morph {
            compatible = "zmk,behavior-mod-morph";
            label = "BACKSPACE_SHIFT_TAB_MORPH";
            bindings = <&lt 1 BACKSPACE>, <&kp LS(TAB)>;

            #binding-cells = <0>;
            mods = <(MOD_LGUI|MOD_RGUI)>;
            keep-mods = <(MOD_LGUI|MOD_RGUI)>;
        };

        tab_tilda_morph: tab_tilda_morph {
            compatible = "zmk,behavior-mod-morph";
            label = "TAB_TILDA_MORPH";
            bindings = <&kp TAB>, <&kp GRAVE>;

            #binding-cells = <0>;
            mods = <(MOD_LGUI|MOD_RGUI)>;
            keep-mods = <(MOD_LGUI|MOD_RGUI)>;
        };
    };

    combos {
        compatible = "zmk,combos";

        Copy {
            bindings = <&kp LG(C)>;
            key-positions = <27 26>;
        };

        Paste {
            bindings = <&kp LG(V)>;
            key-positions = <27 28>;
        };

        Escape {
            bindings = <&kp ESCAPE>;
            key-positions = <2 3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&none  &kp Q            &kp W         &kp F             &kp P                       &kp B               &kp J      &kp L         &kp U             &kp Y         &kp SEMI          &none
&none  &hrm LEFT_ALT A  &hrm LCTRL R  &hrm LEFT_GUI S   &hrm LEFT_SHIFT T           &kp G               &kp M      &hrm RCTRL N  &hrm RIGHT_GUI E  &hrm RCTRL I  &hrm RIGHT_ALT O  &none
&none  &kp Z            &kp X         &kp C             &kp D                       &kp V               &kp K      &kp H         &kp COMMA         &kp DOT       &kp FSLH          &none
                                      &tab_tilda_morph  &backspace_shift_tab_morph  &shift_tab_morph    &kp SPACE  &kp DELETE    &kp ENTER
            >;
        };

        Navigation {
            bindings = <
&trans  &kp LG(NUMBER_1)  &kp LG(NUMBER_2)  &kp LG(NUMBER_3)  &kp LG(NUMBER_4)  &kp LG(NUMBER_5)    &kp LG(NUMBER_6)  &kp LG(NUMBER_7)  &kp LG(NUMBER_8)  &kp LG(NUMBER_9)  &kp LG(NUMBER_0)  &trans
&trans  &trans            &trans            &trans            &trans            &trans              &trans            &kp DOWN          &kp UP            &trans            &trans            &trans
&trans  &trans            &trans            &trans            &trans            &trans              &trans            &kp LEFT          &kp RIGHT         &trans            &trans            &trans
                                            &trans            &trans            &trans              &trans            &trans            &trans
            >;
        };
    };
};
